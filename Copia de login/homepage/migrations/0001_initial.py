# Generated by Django 4.1.7 on 2023-02-20 09:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre del género (p. ej. Ciencia Ficción, Poesía Francesa etc.)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Stories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, help_text='Ingrese el contenido del relato', max_length=10000000000)),
                ('score', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Calificación del relato')),
                ('front', models.ImageField(blank=True, help_text='Ingrese una imagen de portada para el relato', upload_to='')),
                ('files', models.FileField(blank=True, help_text='Suba el archivo en formato pdf', upload_to='')),
                ('last_modified', models.DateField(auto_now=True, help_text='última modificación')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.author')),
                ('genre', models.ManyToManyField(blank=True, help_text='Seleccione un género para este relato', to='homepage.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Poetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, help_text='Ingrese el contenido de la poesía', max_length=10000000000)),
                ('score', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Calificación de la poesía')),
                ('front', models.ImageField(blank=True, help_text='Ingrese una imagen de portada para la poesía', upload_to='')),
                ('files', models.FileField(blank=True, help_text='Suba el archivo en formato pdf', upload_to='')),
                ('last_modified', models.DateField(auto_now=True, help_text='última modificación')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.author')),
                ('genre', models.ManyToManyField(blank=True, help_text='Seleccione un género para esta poesía', to='homepage.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Phrases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, help_text='Ingrese el contenido de la frase', max_length=10000000000)),
                ('score', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Calificación de la frase')),
                ('front', models.ImageField(blank=True, help_text='Ingrese una imagen de portada para la frase', upload_to='')),
                ('files', models.FileField(blank=True, help_text='Suba el archivo en formato pdf', upload_to='')),
                ('last_modified', models.DateField(auto_now=True, help_text='última modificación')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.author')),
                ('genre', models.ManyToManyField(blank=True, help_text='Seleccione un género para esta frae', to='homepage.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('playlist', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, help_text='Ingrese el contenido del escrito', max_length=10000000000)),
                ('score', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Calificación del escrito')),
                ('front', models.ImageField(blank=True, help_text='Ingrese una imagen de portada para el escrito', upload_to='')),
                ('files', models.FileField(blank=True, help_text='Suba el archivo en formato pdf', upload_to='')),
                ('last_modified', models.DateField(auto_now=True, help_text='última modificación')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.author')),
                ('genre', models.ManyToManyField(blank=True, help_text='Seleccione un género para este escrito', to='homepage.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, help_text='Ingrese el contenido del archivo', max_length=10000000000)),
                ('score', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Calificación del archivo')),
                ('front', models.ImageField(blank=True, help_text='Ingrese una imagen de portada para el archivo', upload_to='')),
                ('files', models.FileField(blank=True, help_text='Suba el archivo en formato pdf', upload_to='')),
                ('last_modified', models.DateField(auto_now=True, help_text='última modificación')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.author')),
                ('genre', models.ManyToManyField(blank=True, help_text='Seleccione un género para este archivo', to='homepage.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Lyric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True, help_text='Ingrese el contenido de la lírica', max_length=10000000000)),
                ('score', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Calificación de la lírica')),
                ('front', models.ImageField(blank=True, help_text='Ingrese una imagen de portada para la lírica', upload_to='')),
                ('files', models.FileField(blank=True, help_text='Suba el archivo en formato pdf', upload_to='')),
                ('last_modified', models.DateField(auto_now=True, help_text='última modificación')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.author')),
                ('genre', models.ManyToManyField(blank=True, help_text='Seleccione un género para esta lírica', to='homepage.genre')),
            ],
        ),
    ]
